
-# This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
-# calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").
-# The link variable is set to a proc that returns the link tag.
-# Usage: link.call( page_number [, text [, extra_attributes_string ]])

- link = pagy_link_proc(pagy)

%nav.paginate-container{"aria-label" => "pager", :role => "navigation"}
  .pagination
    - if pagy.prev
      != link.call(pagy.prev, pagy_t('pagy.nav.prev'), 'aria-label="previous" class="previous_page"')
    - else
      %span.previous_page.disabled!= pagy_t('pagy.nav.prev')
    - pagy.series.each do |item|       # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36]
      - if item.is_a?(Integer)         # page link
        != link.call(item, item, "aria-label=#{item}")
      - elsif item.is_a?(String)       # current page
        %span.current.selected= item
      - elsif item == :gap             # page gap
        %span.gap!= pagy_t('pagy.nav.gap')
    - if pagy.next
      != link.call(pagy.next, pagy_t('pagy.nav.next'), 'aria-label="next" class="next_page"')
    - else
      %span.next_page.disabled!= pagy_t('pagy.nav.next')